<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Mar 21 16:50:28 PKT 2016
  Author:  kaka
  Type: BPEL 1.1 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="BPEmail"
         targetNamespace="http://xmlns.oracle.com/GrnApprovalWorkflow/GrnApproval/BPEmail"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:client="http://xmlns.oracle.com/GrnApprovalWorkflow/GrnApproval/BPEmail"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns1="http://www.example.org"
         xmlns:ns2="http://xmlns.oracle.com/ias/pcbpel/NotificationService"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="email_client" partnerLinkType="client:BPEmail" myRole="BPEmailProvider" partnerRole="BPEmailRequester"/>
        <partnerLink name="NotificationService1"
                     partnerLinkType="ns2:NotificationServiceLink"
                     partnerRole="NotificationServiceProvider"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:BPEmailRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:BPEmailResponseMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in BPEmail.wsdl) -->
        <receive name="receiveInput" partnerLink="email_client" portType="client:BPEmail" operation="process" variable="inputVariable" createInstance="yes"/>
        <scope name="Email1">
            <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:email"></bpelx:pattern>
            </bpelx:annotation>
            <variables>
                <variable name="varNotificationReq"
                          messageType="ns2:EmailNotificationRequest"/>
                <variable name="varNotificationResponse"
                          messageType="ns2:ArrayOfResponse"/>
                <variable name="NotificationServiceFaultVariable"
                          messageType="ns2:NotificationServiceErrorMessage"/>
            </variables>
            <sequence name="Sequence1">
                <switch name="Switch1">
                    <case condition="bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:OrganizationCode') = 84">
                        <bpelx:annotation>
                            <bpelx:general>
                                <bpelx:property name="userLabel">
                                    <![CDATA[Check if Org HTD]]>
                                </bpelx:property>
                            </bpelx:general>
                        </bpelx:annotation>
                        <assign name="Assign2">
                            <copy>
                                <from expression="string('grn_htd@nishat.net;')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Bcc"/>
                            </copy>
                            <copy>
                                <from expression="string('Receipt Approved')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Subject"/>
                            </copy>
                            <copy>
                                <from expression="string('Default')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:FromAccountName"/>
                            </copy>
                            <copy>
                                <from expression="string('text/html; charset=UTF-8')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Content/ns2:MimeType"/>
                            </copy>
                            <copy>
                                <from expression="concat(ora:toCDATA(&quot;&lt;html>&lt;head>&quot;), string('     '), ora:toCDATA(&quot;&lt;style>&quot;), string('       '), ora:toCDATA(&quot;tr{&quot;), string('          '), ora:toCDATA(&quot;background:#deebf6;&quot;), string('                '), ora:toCDATA(&quot;padding:8px;&quot;), string('       '), ora:toCDATA(&quot;}&quot;), string('   '), ora:toCDATA(&quot;#footer{&quot;), string('    '), ora:toCDATA(&quot;background:#ffffff;&quot;), string('    '), ora:toCDATA(&quot;color:#777879;&quot;), string('   '), ora:toCDATA(&quot;}&quot;), string('  '), ora:toCDATA(&quot;&lt;/style>&quot;), string('  '), ora:toCDATA(&quot;&lt;/head>&quot;), string('    '), ora:toCDATA(&quot;&lt;body>&quot;), string('    '), ora:toCDATA(&quot;&lt;div id=main_div>&quot;), string('       '), ora:toCDATA(&quot;&lt;center>&quot;), string('       '), ora:toCDATA(&quot;&lt;table>&quot;), string('       '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('GRN # '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBody'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('PO # '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:PO_NUM'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('ORG '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBodyOrg'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('Approver(s) '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBodyApprover'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('             '), ora:toCDATA(&quot;&lt;TD colspan=2 id=footer>&lt;/br>&lt;/br>&quot;), string('This is a system generated email'), ora:toCDATA(&quot;&lt;/TD>&quot;), string('         '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('        '), ora:toCDATA(&quot;&lt;/table>&quot;), string('      '), ora:toCDATA(&quot;&lt;/h3>&lt;/center>&quot;), string('       '), ora:toCDATA(&quot;&lt;/div>&quot;), string('     '), ora:toCDATA(&quot;&lt;/body>&quot;), ora:toCDATA(&quot;&lt;/html>&quot;), string('    '))"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Content/ns2:ContentBody"/>
                            </copy>
                            <copy>
                                <from expression="string('')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:FromUserName"/>
                            </copy>
                            <copy>
                                <from expression="string('')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:ReplyToAddress"/>
                            </copy>
                            <copy>
                                <from expression="concat(bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:emailAddress'),';',bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:rcvTransactionPerson'))"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:To"/>
                            </copy>
                        </assign>
                    </case>
                    <case condition="bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:OrganizationCode') = 108">
                        <bpelx:annotation>
                            <bpelx:general>
                                <bpelx:property name="userLabel">
                                    <![CDATA[Check if Org is NCPL]]>
                                </bpelx:property>
                            </bpelx:general>
                        </bpelx:annotation>
                        <assign name="Assign1">
                            <copy>
                                <from expression="string('Default')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:FromAccountName"/>
                            </copy>
                            <copy>
                                <from expression="string('text/html; charset=UTF-8')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Content/ns2:MimeType"/>
                            </copy>
                            <copy>
                                <from expression="concat(ora:toCDATA(&quot;&lt;html>&lt;head>&quot;), string('     '), ora:toCDATA(&quot;&lt;style>&quot;), string('       '), ora:toCDATA(&quot;tr{&quot;), string('          '), ora:toCDATA(&quot;background:#deebf6;&quot;), string('                '), ora:toCDATA(&quot;padding:8px;&quot;), string('       '), ora:toCDATA(&quot;}&quot;), string('   '), ora:toCDATA(&quot;#footer{&quot;), string('    '), ora:toCDATA(&quot;background:#ffffff;&quot;), string('    '), ora:toCDATA(&quot;color:#777879;&quot;), string('   '), ora:toCDATA(&quot;}&quot;), string('  '), ora:toCDATA(&quot;&lt;/style>&quot;), string('  '), ora:toCDATA(&quot;&lt;/head>&quot;), string('    '), ora:toCDATA(&quot;&lt;body>&quot;), string('    '), ora:toCDATA(&quot;&lt;div id=main_div>&quot;), string('       '), ora:toCDATA(&quot;&lt;center>&quot;), string('       '), ora:toCDATA(&quot;&lt;table>&quot;), string('       '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('GRN # '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBody'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('PO # '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:PO_NUM'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('ORG '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBodyOrg'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('Approver(s) '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBodyApprover'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('             '), ora:toCDATA(&quot;&lt;TD colspan=2 id=footer>&lt;/br>&lt;/br>&quot;), string('This is a system generated email'), ora:toCDATA(&quot;&lt;/TD>&quot;), string('         '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('        '), ora:toCDATA(&quot;&lt;/table>&quot;), string('      '), ora:toCDATA(&quot;&lt;/h3>&lt;/center>&quot;), string('       '), ora:toCDATA(&quot;&lt;/div>&quot;), string('     '), ora:toCDATA(&quot;&lt;/body>&quot;), ora:toCDATA(&quot;&lt;/html>&quot;), string('    '))"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Content/ns2:ContentBody"/>
                            </copy>
                            <copy>
                                <from expression="string('')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:ReplyToAddress"/>
                            </copy>
                            <copy>
                                <from expression="string('')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:FromUserName"/>
                            </copy>
                            <copy>
                                <from expression="string('grn_ncpl@nishat.net;')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Bcc"/>
                            </copy>
                            <copy>
                                <from expression="string('Receipt Approved')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Subject"/>
                            </copy>
                            <copy>
                                <from variable="inputVariable" part="payload"
                                      query="/ns1:EmailInput/ns1:emailAddress"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:To"/>
                            </copy>
                            <copy>
                                <from expression="concat(bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:emailAddress'),';',bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:rcvTransactionPerson')) "/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:To"/>
                            </copy>
                        </assign>
                    </case>
                    <otherwise>
                        <assign name="EmailParamsAssign2">
                            <copy>
                                <from expression="string('Default')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:FromAccountName"/>
                            </copy>
                            <copy>
                                <from expression="string('')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:FromUserName"/>
                            </copy>
                            <copy>
                                <from expression="string('grn_ncl@nishat.net;')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Bcc"/>
                            </copy>
                            <copy>
                                <from expression="string('')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:ReplyToAddress"/>
                            </copy>
                            <copy>
                                <from expression="bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailSubject')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Subject"/>
                            </copy>
                            <copy>
                                <from expression="concat(bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:emailAddress'),&quot;;&quot;,bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:rcvTransactionPerson'))"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:To"/>
                            </copy>
                            <copy>
                                <from expression="concat(ora:toCDATA(&quot;&lt;html>&lt;head>&quot;), string('     '), ora:toCDATA(&quot;&lt;style>&quot;), string('       '), ora:toCDATA(&quot;tr{&quot;), string('          '), ora:toCDATA(&quot;background:#deebf6;&quot;), string('                '), ora:toCDATA(&quot;padding:8px;&quot;), string('       '), ora:toCDATA(&quot;}&quot;), string('   '), ora:toCDATA(&quot;#footer{&quot;), string('    '), ora:toCDATA(&quot;background:#ffffff;&quot;), string('    '), ora:toCDATA(&quot;color:#777879;&quot;), string('   '), ora:toCDATA(&quot;}&quot;), string('  '), ora:toCDATA(&quot;&lt;/style>&quot;), string('  '), ora:toCDATA(&quot;&lt;/head>&quot;), string('    '), ora:toCDATA(&quot;&lt;body>&quot;), string('    '), ora:toCDATA(&quot;&lt;div id=main_div>&quot;), string('       '), ora:toCDATA(&quot;&lt;center>&quot;), string('       '), ora:toCDATA(&quot;&lt;table>&quot;), string('       '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('GRN # '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBody'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('PO # '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:PO_NUM'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('ORG '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBodyOrg'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&quot;), string('Approver(s) '), ora:toCDATA(&quot;&lt;/TD>&quot;), string('           '), ora:toCDATA(&quot;&lt;TD>&lt;p>&quot;), bpws:getVariableData('inputVariable','payload','/ns1:EmailInput/ns1:EmailBodyApprover'), ora:toCDATA(&quot;&lt;/p>&lt;/TD>&quot;), string('       '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('  '), ora:toCDATA(&quot;&lt;TR>&quot;), string('             '), ora:toCDATA(&quot;&lt;TD colspan=2 id=footer>&lt;/br>&lt;/br>&quot;), string('This is a system generated email'), ora:toCDATA(&quot;&lt;/TD>&quot;), string('         '), ora:toCDATA(&quot;&lt;/TR>&quot;), string('        '), ora:toCDATA(&quot;&lt;/table>&quot;), string('      '), ora:toCDATA(&quot;&lt;/h3>&lt;/center>&quot;), string('       '), ora:toCDATA(&quot;&lt;/div>&quot;), string('     '), ora:toCDATA(&quot;&lt;/body>&quot;), ora:toCDATA(&quot;&lt;/html>&quot;), string('    '))"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Content/ns2:ContentBody"/>
                            </copy>
                            <copy>
                                <from expression="string('text/html; charset=UTF-8')"/>
                                <to variable="varNotificationReq"
                                    part="EmailPayload"
                                    query="/EmailPayload/ns2:Content/ns2:MimeType"/>
                            </copy>
                        </assign>
                    </otherwise>
                </switch>
                <invoke name="InvokeNotificationService"
                        portType="ns2:NotificationService"
                        partnerLink="NotificationService1"
                        inputVariable="varNotificationReq"
                        outputVariable="varNotificationResponse"
                        operation="sendEmailNotification"/>
            </sequence>
        </scope>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="email_client" portType="client:BPEmailCallback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>